read_transactions.cli
=====================

.. py:module:: read_transactions.cli

.. autoapi-nested-parse::

   :author: Tim Häberlein
   :version: 1.1
   :date: 01.11.2025
   :organisation: TU Dresden, FZM



Functions
---------

.. autoapisummary::

   read_transactions.cli.list_crawlers
   read_transactions.cli.run_crawler
   read_transactions.cli.run_all_crawlers
   read_transactions.cli._worker_run
   read_transactions.cli.run_all_crawlers_parallel
   read_transactions.cli.parse_kv_list
   read_transactions.cli.build_parser
   read_transactions.cli._configure_logging
   read_transactions.cli.main


Module Contents
---------------

.. py:function:: list_crawlers() -> None

   Zeigt alle verfügbaren Crawler aus der Registry an.


.. py:function:: run_crawler(name: str, start: str, end: str, log_level: str, options: dict | None = None) -> None

   Startet den angegebenen Crawler.


.. py:function:: run_all_crawlers(start: str | None, end: str | None, log_level: str, options: dict | None = None, include: list[str] | None = None, exclude: list[str] | None = None, dry_run: bool = False, parallel: int = 0) -> None

   Startet mehrere Crawler gem. config.yaml: run_all.<crawler>: true/false.
   Per --include/--exclude kann die Auswahl überschrieben werden.


.. py:function:: _worker_run(name: str, start: str | None, end: str | None, log_level: str, options: dict | None)

.. py:function:: run_all_crawlers_parallel(selected: list[str], start, end, log_level, options, max_workers: int)

.. py:function:: parse_kv_list(kv_list) -> dict

   Parst eine Liste von key=value Strings in ein Dictionary.


.. py:function:: build_parser() -> argparse.ArgumentParser

   Baut den ArgumentParser für das CLI und gibt ihn zurück.
   Wichtig: Keine Seiteneffekte (kein Logging, keine IO) – damit Sphinx
   via sphinx-argparse diese Funktion gefahrlos importieren und rendern kann.


.. py:function:: _configure_logging() -> None

   Konfiguriert das Logging – nur im CLI-Lauf, niemals beim Import (Sphinx!).


.. py:function:: main(argv: list[str] | None = None) -> None

